{"ts":1365860072921,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var assert = require(\"assert\");\n\nvar calculator = { \n    addition: function(a, b){\n        if ( a === -1 && b === +0 ) return -1;\n        \n        if ( a === +0 ) return b;\n        \n        if ( b === +0 ) return a;\n        \n        if ( a === -1 && b === -1 ) return -2;\n        \n        if ( a === -1 || b === -1 ) return +0;\n        \n        return 2;\n    },\n    \n    subtraction: function(a, b){\n        if ( a === 0 && b === +1 ) return -1;\n        \n        if ( a === -1 && b === -1 ) return -2;\n        \n        if ( b === -1 ) return +2;\n        \n        if ( b === +0 ) \n        {\n            if ( a === -1 ) return -1;\n            \n            return +1;\n        }\n        \n        return +0;\n    }\n}\n\nassert(calculator);\n\nassert(calculator.subtraction);\ntest('subtraction', [ \n    [+1, +1, +0],\n    [+1, -1, +2],\n    [+1, +0, +1],\n    [-1, +1, +0],\n    [-1, -1, -2],\n    [-1, +0, -1],\n    [+0, +1, -1],\n]);\n\nassert(calculator.addition);\ntest('addition', [ \n    [+1, +1, +2],\n    [+1, -1, +0],\n    [+1, +0, +1],\n    [-1, +1, +0],\n    [-1, -1, -2],\n    [-1, +0, -1],\n    [+0, +1, +1],\n    [+0, -1, -1],\n    [+0, +0, +0],\n]);\n\n\nfunction test(operation, cases){\n    cases.forEach(function(item){\n        assert(calculator[operation](item[0], item[1]) === item[2]);\n    });\n}"]],"start1":0,"start2":0,"length1":0,"length2":1281}]],"length":1281}
