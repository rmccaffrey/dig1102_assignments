{"ts":1365859740104,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1365861491430,"patch":[[{"diffs":[[1,"var assert = require(\"assert\");\n\n//assert(1 + 1 == 1, '1 + 1 does not equal 1');\n//assert.equal(1, 1 + 1, '1 + 1 does not equal 1');\n\n/**\n * four functions with two parameters:\n * - addition\n * - subtraction\n * - multiplication\n * - division\n * \n * Must accept positive and negative Numbers (int or \n * float) AND zero. Must not make an error!\n */\n \n/**\n * testing addition():\n * one | two | out\n * ====+=====+====\n *  +1 | +1  | +2\n *  +1 | +0  | +1\n *  +1 | -1  | +0\n *  -1 | +1  | +0\n *  -1 | +0  | -1\n *  -1 | -1  | -2\n *  +0 | +1  | +1\n *  +0 | +0  | +0\n *  +0 | -1  | -1\n */\n\n//This is an addition function\nvar addition = function(a, b) {\n     return (a+b);\n}\n\n//This is a subtraction function\nvar sub = function(a, b) {\n     return (a-b);\n}\n\n//These are addition tests\nassert.equal(2,addition(1,1));\nassert.equal(1,addition(1,0));\nassert.equal(0,addition(1,-1));\nassert.equal(0,addition(-1,1));\nassert.equal(-1,addition(-1,0));\nassert.equal(-2,addition(-1,-1));\n\n//This is a subtraction test\nassert.equal(0,sub(1,1));\nassert.equal(1,sub(1,0));\nassert.equal(2,sub(1,-1));\nassert.equal(-1,sub(0,1));\nassert.equal(0,sub(0,0));\n\nassert.equal(0,multi(0,1));\n\n\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1165}]],"length":1165,"saved":false}
