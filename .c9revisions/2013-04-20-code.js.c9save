{"ts":1366467500353,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Imagine a hallway with 100 doors. All of them are closed.\n * Take a walk down the hallway. Open every door.\n * Take another walk down the hallway. Close every other door.\n * Take another walk down the hallway. Examine every third door, if the door is open, close it. If it is closed, open it.\n * On the fourth pass of the hallway, examine every fourth door. If the door is open, close it. If it is closed, open it.\n * Repeat in kind for 100 passes of the hallway.\n * What is the state of the hallway?\n * \n * A Hallway has:\n *  - a list of Number 1 (open) or 0 (closed): doors (Array)\n *  - a method of changing the state of a single door: toggle (Function)\n *  - a method of walking down the hallway to change the state: pass (Function)\n *      - example: on 10th pass(), toggle() every 10th item in doors\n *      - psuedo: on Nth pass(), toggle() every Nth item in doors\n *  - the number of the passes taken so far: passes (Number) = 0\n *  - a method of walking down the hallway for 100 passes: allPasses (Function)\n */\nmodule.exports = { // PROD CODE\n    hallway: { \n        doors: [1,0,0,0,0,0,0,0,0,0]\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":1120}]],"length":1120}
{"contributors":[],"silentsave":false,"ts":1366468392251,"patch":[[{"diffs":[[0,",0,0,0]\n"],[1,"        toggle: function (door) {\n            module.exports.hallway.doors(door) = 1;\n        }\n"],[0,"    }\n}"]],"start1":1105,"start2":1105,"length1":15,"length2":111}]],"length":1216,"saved":false}
{"ts":1366468664115,"patch":[[{"diffs":[[0,"doors: ["],[-1,"1"],[1,"0"],[0,",0,0,0,0"]],"start1":1084,"start2":1084,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"module.exports.hallway.doors("],[1,"if door:[] == 0,\n            door:[] = 1,\n            else "],[0,"door"],[-1,") = 1"],[1,":[] = 0"],[0,";\n  "]],"start1":1155,"start2":1155,"length1":46,"length2":78}]],"length":1248,"saved":false}
{"ts":1366469158814,"patch":[[{"diffs":[[0,"0,0,0,0]"],[1,","],[0,"\n"],[-1,""],[0,"        "]],"start1":1104,"start2":1104,"length1":17,"length2":18},{"diffs":[[0," if "],[1,"("],[0,"door"],[-1,":["],[1,"s [ i "],[0,"] == 0"],[-1,","],[1,"){"],[0,"\n   "]],"start1":1159,"start2":1159,"length1":21,"length2":27},{"diffs":[[0,"    "],[-1,"door:[] = 1,\n            else door:[] = 0;"],[1,"    i = 1;\n            }\n                else {\n                    i = 0;\n            }"],[0,"\n   "]],"start1":1191,"start2":1191,"length1":50,"length2":96}]],"length":1301,"saved":false}
{"ts":1366471279340,"patch":[[{"diffs":[[0," if "],[-1,"(doors [ i ] == 0)"],[0,"{\n  "]],"start1":1159,"start2":1159,"length1":26,"length2":8},{"diffs":[[0,"    "],[-1,"i = 1;"],[1,"door === 0,"],[0,"\n   "]],"start1":1177,"start2":1177,"length1":14,"length2":19},{"diffs":[[0,"            "],[-1,"}\n"],[0,"    "],[1,"return 1;\n"],[0,"            "]],"start1":1193,"start2":1193,"length1":30,"length2":38},{"diffs":[[0,"    "],[-1,"else {\n                    i = 0;"],[1,"}\n        }"],[0,"\n   "]],"start1":1227,"start2":1227,"length1":41,"length2":19},{"diffs":[[0,"  }\n            "],[-1,"}"],[1,"    "],[0,"\n        }\n    }"]],"start1":1239,"start2":1239,"length1":33,"length2":36}]],"length":1277,"saved":false}
{"ts":1366471425256,"patch":[[{"diffs":[[0," if "],[-1,"{\n                "],[1,"("],[0,"door"]],"start1":1159,"start2":1159,"length1":26,"length2":9},{"diffs":[[0,"or === 0"],[-1,","],[1,") {"],[0,"\n       "]],"start1":1166,"start2":1166,"length1":17,"length2":19},{"diffs":[[0,"    "],[-1,"        \n        }"],[0,"\n   "]],"start1":1232,"start2":1232,"length1":26,"length2":8}]],"length":1244,"saved":false}
{"ts":1366476182412,"patch":[[{"diffs":[[0,"nction ("],[1," "],[0,"door"],[1," "],[0,") {\n    "]],"start1":1132,"start2":1132,"length1":20,"length2":22},{"diffs":[[0,";\n            }\n"],[1,"            else {\n                return 0;\n            }\n            \n        },\n        pass: function () {\n            this.doors = this.doors.map( this.toggle );\n            return this.doors;\n    "],[0,"        }\n      "]],"start1":1204,"start2":1204,"length1":32,"length2":234},{"diffs":[[0,";\n            }\n"],[-1,""],[0,"        \n    }\n}"]],"start1":1416,"start2":1416,"length1":32,"length2":32},{"diffs":[[0," \n    }\n"],[-1,"}"],[1,"\n};"]],"start1":1439,"start2":1439,"length1":9,"length2":11}]],"length":1450,"saved":false}
