{"ts":1366467543534,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var assert = require(\"assert\"),\n    hundredDoors = require(\"./2013-04-20-code\");\n\n//do we have a hallway?\nassert(hundredDoors.hallway);\n\n//do we have doors in the hallway?\nassert(hundredDoors.hallway.doors);\n\n//do we have 10 doors?\nassert.equal(hundredDoors.hallway.doors.length, 10);\n//  line 11 same as >   'assert(hundredDoors.hallway.doors.length == 10);'\n\n//are all the doors closed?\nhundredDoors.hallway.doors.forEach(function(door){\n    assert.equal(door,0);\n        });\n        \n//can we change the state of a door(create toggle function)?\nh\n\n//are all doors in the correct state after first pass?\n//can we tell which pass we are on?\n//are all the doors in the correct state after each pass?\n"]],"start1":0,"start2":0,"length1":0,"length2":700}]],"length":700}
{"contributors":[],"silentsave":false,"ts":1366469308446,"patch":[[{"diffs":[[0,"ction)?\n"],[-1,"h"],[1,"assert(hundredDoors.hallway.toggle);\nassert(hundredDoors.hallway.toggle(0) === 1);"],[0,"\n\n//are "]],"start1":540,"start2":540,"length1":17,"length2":98}]],"length":781,"saved":false}
{"ts":1366470970718,"patch":[[{"diffs":[[0," === 1);"],[1,"\nassert(hundredDoors.hallway.toggle(1) === 0);"],[0,"\n\n//are "]],"start1":622,"start2":622,"length1":16,"length2":62}]],"length":827,"saved":false}
{"ts":1366471035394,"patch":[[{"diffs":[[0," we "],[-1,"change the state of a door(create toggle function)"],[1,"open a door"],[0,"?\nas"]],"start1":492,"start2":492,"length1":58,"length2":19},{"diffs":[[0," === 1);"],[1,"\n\n//can we close a door?"],[0,"\nassert("]],"start1":583,"start2":583,"length1":16,"length2":40}]],"length":812,"saved":false}
{"ts":1366476251243,"patch":[[{"diffs":[[0,"-code\");"],[1,"\n    \n/**\n * What did we do well?\n *  - Good teamwork, good communication (with reminders)\n *  - Got much further than ever before.\n *  - Mostly baby steps.\n *  - Understanding concepts and syntax better.\n *  - Looked up questions\n * \n * What should we improve?\n *  - PRACTICE Baby Steps\n *  - PRACTICE Following the Spec\n *  - PRACTICE Writing the right tests.\n *  - STUDY concepts and syntax\n * \n * Did we meet our goals?\n *  - Learned about chaining methods on a return value of a function\n *  - Learned about \"Array.map()\"\n *  - Didn't finish the problem; made it to \"first pass\"\n *  - Learned some \"this\" magic...\n */"],[0,"\n\n//do w"]],"start1":72,"start2":72,"length1":16,"length2":638},{"diffs":[[0," we "],[-1,"open a door"],[1,"change the state of a door(create toggle function)"],[0,"?\nas"]],"start1":1114,"start2":1114,"length1":19,"length2":58},{"diffs":[[0,"toggle);"],[1,"\n\n// can we change closed to open?"],[0,"\nassert("]],"start1":1198,"start2":1198,"length1":16,"length2":50},{"diffs":[[0,"\n\n//"],[1," "],[0,"can we c"],[-1,"lose a door"],[1,"hange open to closed"],[0,"?\nas"]],"start1":1286,"start2":1286,"length1":27,"length2":37},{"diffs":[[0," === 0);"],[1," "],[0,"\n\n//are "]],"start1":1358,"start2":1358,"length1":16,"length2":17},{"diffs":[[0,"t pass?\n"],[1,"assert(hundredDoors.hallway.pass);\n\nhundredDoors.hallway.pass().forEach( function( door ) {\n    assert.equal( door, 1);\n});\n\nhundredDoors.hallway.doors.forEach( function(door) {\n    assert.equal( door, 1);\n});\n\n\n"],[0,"//can we"]],"start1":1416,"start2":1416,"length1":16,"length2":228},{"diffs":[[0,"are on?\n"],[1,"assert.equal(passes, 1);\n\n"],[0,"//are al"]],"start1":1664,"start2":1664,"length1":16,"length2":42}]],"length":1756,"saved":false}
